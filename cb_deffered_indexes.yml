---
- name: Manage Couchbase indexes couchbase  
  hosts: all
  become: yes
  tasks:
    - name: Ensure jq is installed
      apt:
        name: jq
        state: present
        update_cache: yes

    - name: Validate index file existence
      ansible.builtin.stat:
        path: /home/ubuntu/index_file.txt
      register: index_file_stat

    - name: Fail if index file is missing
      fail:
        msg: "Index file not found: /home/ubuntu/index_file.txt"
      when: not index_file_stat.stat.exists

    - name: Read and decode index file
      ansible.builtin.slurp:
        src: /home/ubuntu/index_file.txt
      register: index_file_content

    - name: Decode the index file content
      set_fact:
        decoded_index_file_content: "{{ index_file_content.content | b64decode }}"

    - name: Debug decoded index file content
      debug:
        msg: "{{ decoded_index_file_content }}"

    - name: Extract index creation SQL
      set_fact:
        index_creation_statements: "{{ decoded_index_file_content | regex_findall('CREATE INDEX.*?;') }}"

    - name: Debug index creation statements
      debug:
        msg: "{{ index_creation_statements }}"

    - name: Validate Couchbase CLI availability
      shell: "/opt/couchbase/bin/cbq --version"
      register: cbq_check
      changed_when: false

    - name: Create indexes
      shell: "/opt/couchbase/bin/cbq -u Admin -p redhat -s '{{ item }}'"
      with_items: "{{ index_creation_statements }}"
      ignore_errors: true
      register: ddl_output

    - name: Debug DDL Output
      debug:
        msg: "{{ ddl_output }}"

    - name: Extract index components for building
      set_fact:
        index_components: "{{ decoded_index_file_content | regex_findall('CREATE INDEX `([^`]+)` ON `([^`]+)`\\.([^`]+)\\.([^`]+)\\(([^)]+)\\);') }}"

    - name: Debug index components
      debug:
        msg: "{{ index_components }}"

    - name: Build indexes
      shell: |
        /opt/couchbase/bin/cbq -u Admin -p redhat -s "
        BUILD INDEX ON `{{ item.1 }}`.`{{ item.2 }}`.`{{ item.3 }}` (`{{ item.4 }}`);
        "
      with_items: "{{ index_components }}"
      register: build_output
      ignore_errors: true

 
