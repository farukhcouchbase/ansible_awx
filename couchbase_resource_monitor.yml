---
- name: Couchbase Resource Monitor
  hosts: all
  gather_facts: false
  vars:
    # Thresholds
    index_memory_threshold_percent: 75
    cpu_threshold_percent: 75
    memory_threshold_percent: 75
    disk_threshold_percent: 75
    alert_webhook_url: "https://webhook.site/135d7b7c-96b1-42fe-8b3a-ed57d510c1d3"

  tasks:

    ###########################
    # FETCH COUCHBASE DATA
    ###########################
    - name: Get Couchbase cluster info
      uri:
        url: "http://127.0.0.1:8091/pools/default"
        method: GET
        return_content: yes
        user: "Admin"
        password: "redhat"
        force_basic_auth: yes
      register: cluster_json

    - name: Get self node info
      uri:
        url: "http://127.0.0.1:8091/nodes/self"
        method: GET
        return_content: yes
        user: "Admin"
        password: "redhat"
        force_basic_auth: yes
      register: node_json_response

    - name: Parse self node JSON
      set_fact:
        node_json: "{{ node_json_response.json }}"

    ###########################
    # INDEX MEMORY CHECK
    ###########################
    - name: Get Index Memory Quota in bytes
      set_fact:
        index_quota_bytes: "{{ (cluster_json.json.indexMemoryQuota | default(0) | int * 1024 * 1024) }}"

    - name: Calculate Index Memory Threshold
      set_fact:
        index_threshold_bytes: "{{ (index_quota_bytes | float * (index_memory_threshold_percent | float) / 100) | round(0) | int }}"

    - name: Get actual Index Memory Used in bytes
      set_fact:
        index_used_bytes: "{{ node_json.interestingStats.index_disk_size | default(0) | int }}"

    - name: Alert if Index Memory exceeds threshold
      uri:
        url: "{{ alert_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          subject: "ðŸš¨ Couchbase Index Memory Alert on {{ inventory_hostname }}"
          body: >
            ALERT: Index memory usage above threshold!
            Used: {{ index_used_bytes }} bytes ({{ (index_used_bytes / 1024 / 1024) | round(2) }} MiB)
            Threshold: {{ (index_threshold_bytes / 1024 / 1024) | round(2) }} MiB
      when: index_used_bytes | int > index_threshold_bytes | int

    ###########################
    # CPU USAGE CHECK
    ###########################
    - name: Get CPU usage safely
      set_fact:
        cpu_used: "{{ node_json.systemStats.cpu_utilization_rate | default(0) | float }}"

    - name: Alert if CPU exceeds threshold
      uri:
        url: "{{ alert_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          subject: "ðŸš¨ Couchbase CPU Alert on {{ inventory_hostname }}"
          body: >
            ALERT: CPU usage above threshold!
            Current CPU: {{ cpu_used }}%
            Threshold: {{ cpu_threshold_percent }}%
      when: cpu_used | float > cpu_threshold_percent | float

    ###########################
    # MEMORY USAGE CHECK
    ###########################
    - name: Get Memory total safely
      set_fact:
        memory_total: "{{ node_json.systemStats.mem_total | default(0) | int }}"

    - name: Get Memory free safely
      set_fact:
        memory_free: "{{ node_json.systemStats.mem_free | default(0) | int }}"

    - name: Calculate Memory used and threshold
      set_fact:
        memory_used: "{{ (memory_total | int) - (memory_free | int) }}"
        memory_threshold_bytes: "{{ ((memory_total | int) * (memory_threshold_percent | float) / 100) | round(0) | int }}"

    - name: Alert if Memory exceeds threshold
      uri:
        url: "{{ alert_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          subject: "ðŸš¨ Couchbase Memory Alert on {{ inventory_hostname }}"
          body: >
            ALERT: Memory usage above threshold!
            Used: {{ memory_used }} bytes ({{ (memory_used / 1024 / 1024) | round(2) }} MiB)
            Threshold: {{ (memory_threshold_bytes / 1024 / 1024) | round(2) }} MiB
      when: memory_used > memory_threshold_bytes

    ###########################
    # DISK USAGE CHECK
    ###########################
    - name: Get HDD totals and usage safely
      set_fact:
        disk_total: "{{ (node_json.storage.hdd[0].sizeKBytes | default(0) | int * 1024) }}"
        disk_used: "{{ node_json.storageTotals.hdd.used | default(0) | int }}"
        disk_used_percent: >-
          {% if (node_json.storage.hdd[0].sizeKBytes | default(0) | int) > 0 %}
            {{ ((disk_used | float / disk_total | float) * 100) | round(2) }}
          {% else %}
            0
          {% endif %}

    - name: Alert if Disk exceeds threshold
      uri:
        url: "{{ alert_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          subject: "ðŸš¨ Couchbase Disk Alert on {{ inventory_hostname }}"
          body: >
            ALERT: Disk usage above threshold!
            Usage: {{ disk_used_percent }}%
            Threshold: {{ disk_threshold_percent }}%
            Total: {{ (disk_total / 1024 / 1024 / 1024) | round(2) }} GiB
            Used: {{ (disk_used / 1024 / 1024 / 1024) | round(2) }} GiB
      when: (disk_used_percent | float) > (disk_threshold_percent | float)



    ###########################
    # SUMMARY TABLE
    ###########################
    
    - name: Display Couchbase Resource Summary as key-value
      debug:
        msg:
          Index_Memory: "{{ (index_used_bytes | int / 1024 / 1024) | round(2) }} MiB / {{ (index_threshold_bytes | int / 1024 / 1024) | round(2) }} MiB"
          CPU_Usage: "{{ cpu_used | float | round(2) }} % / {{ cpu_threshold_percent | float | round(2) }} %"
          Memory_Usage: "{{ (memory_used | int / 1024 / 1024) | round(2) }} MiB / {{ (memory_threshold_bytes | int / 1024 / 1024) | round(2) }} MiB"
          Disk_Usage: "{{ disk_used_percent | float | round(2) }} % / {{ disk_threshold_percent | float | round(2) }} %"      
