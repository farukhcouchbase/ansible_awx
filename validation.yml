---
- name: Validate and Create Couchbase Indexes
  hosts: all
  gather_facts: no
  vars:
    couchbase_host: "127.0.0.1"
    couchbase_bin_path: "/opt/couchbase/bin/cbq"
    couchbase_admin_username: "Admin"
    couchbase_admin_password: "redhat"
    index_queries: []  # This comes from the Ansible survey

  tasks:
    - name: Identify and categorize index queries
      set_fact:
        allowed_queries: []
        not_allowed_queries: []
        allowed_indexes: []
        not_allowed_indexes: []

        
    - name: Validate syntax of index queries
      shell: "{{ couchbase_bin_path }} -u {{ couchbase_admin_username }} -p {{ couchbase_admin_password }} -s 'EXPLAIN {{ item }}'"
      register: syntax_check
      with_items: "{{ index_queries }}"
      ignore_errors: yes  # Capture syntax errors without failing the playbook


    - name: Validate index queries
      set_fact:
        allowed_queries: "{{ allowed_queries + [item] }}"
      when: 
        - "not item | regex_search('CREATE PRIMARY INDEX', ignorecase=True)"
        - "item | regex_search('CREATE INDEX', ignorecase=True)"
        - "item | regex_search('WHERE', ignorecase=True)"
      with_items: "{{ index_queries }}"

    - name: Parse and filter index statements for allowed indexes
      set_fact:
        allowed_indexes: >
          {%- set allowed = [] -%}
          {%- for line in (index_file_content.content | b64decode).splitlines() -%}
            {%- if 'where' in line.lower() -%}
              {{ allowed.append(line) }}
            {%- elif 'scope' in line.lower() and '{"defer_build":true}' in line.lower() and 'where' not in line.lower() and 'primary' not in line.lower() -%}
              {{ allowed.append(line) }}
            {%- endif -%}
          {%- endfor -%}
          {{ allowed }}  

    - name: Parse and filter index statements for not-allowed indexes
      set_fact:
        not_allowed_indexes: >
          {%- set not_allowed = [] -%}
          {%- for line in (index_file_content.content | b64decode).splitlines() -%}
            {%- if 'where' not in line.lower() and 'scope' not in line.lower() and '{"defer_build":true}' not in line.lower() and 'primary' not in line.lower() and line.strip() != '' and not line.startswith('//') -%}
              {{ not_allowed.append(line) }}
            {%- endif -%}
          {%- endfor -%}
          {{ not_allowed }}  

    - name: Parse and filter index statements for allowed indexes (with modifications)
      set_fact:
        allowed_indexes_modified: >
          {%- set allowed = [] -%}
          {%- for line in (index_file_content.content | b64decode).splitlines() -%}
            {%- if 'where' in line.lower() and
                  '{"defer_build": true}' not in line.lower() and
                  '"num_replica": 1' not in line.lower() -%}
              
              {%- set modified_line = line + ' WITH {"defer_build": true, "num_replica": 1}' -%}
              {{ allowed.append(modified_line) }}

            {%- elif 'scope' in line.lower() and
                  '{"defer_build": true}' in line.lower() and
                  'where' not in line.lower() and
                  'primary' not in line.lower() -%}
              {{ allowed.append(line) }}
            {%- endif -%}
          {%- endfor -%}
          {{ allowed }}  

    - name: Debug modified allowed indexes
      debug:
        msg: "{{ item }}"
      loop: "{{ allowed_indexes_modified }}"
      loop_control:
        loop_var: item  
    
    - name: Debug allowed index statements
      debug:
        msg: "{{ item }}"
      loop: "{{ allowed_indexes }}"
      loop_control:
        loop_var: item

    - name: Debug not-allowed index statements
      debug:
        msg: "{{ item }}"
      loop: "{{ not_allowed_indexes }}"
      loop_control:
        loop_var: item

    - name: Identify not allowed queries
      set_fact:
        not_allowed_queries: "{{ not_allowed_queries + [item] }}"
      when: 
        - "item | regex_search('CREATE PRIMARY INDEX', ignorecase=True) or not item | regex_search('WHERE', ignorecase=True)"
      with_items: "{{ index_queries }}"

    - name: Debug - Allowed Queries
      debug:
        msg: "Allowed Index Query: {{ item }}"
      with_items: "{{ allowed_queries }}"

    - name: Debug - Not Allowed Queries
      debug:
        msg: "Not Allowed Index Query: {{ item }}"
      with_items: "{{ not_allowed_queries }}"

    # - name: Ensure defer_build and num_replica in index queries
    #   set_fact:
    #     updated_queries: >-
    #       {{
    #         allowed_queries | map('regex_replace', 
    #           '(?i)(USING GSI)(?!.*WITH)', 
    #           'USING GSI WITH {"defer_build": true, "num_replica": 1}') 
    #         | list
    #       }} 
          
          
    # - name: Debug - Updated Index Queries
    #   debug:
    #     msg: "Updated Query: {{ item }}"
    #   with_items: "{{ updated_queries }}"

    # - name: Update defer_build and num_replica properties in allowed indexes
    #   set_fact:
    #     updated_queries: >
    #       {%- set updated = [] -%}
    #       {%- for line in allowed_queries -%}
    #         {%- if 'CREATE INDEX' in line -%}
    #            {%- if 'USING GSI' in line and 'WHERE' in line and ('WITH {' not in line) -%}
    #              {%- set updated_line = line | regex_replace('(?i)(USING GSI)', 'USING GSI WITH {"defer_build": true, "num_replica": 1}') -%} 
    #           {%- else -%}
    #             {%- set updated_line = line -%}
    #           {%- endif -%}
    #         {%- else -%}
    #           {%- set updated_line = line -%}
    #         {%- endif -%}
    #         {{ updated.append(updated_line) }}
    #       {%- endfor -%}
    #       {{ updated | join('\n') }}

 
    
    # - name: Update defer_build and num_replica properties in allowed indexes
    #   set_fact:
    #     updated_queries: >
    #       {%- set updated = [] -%}
    #       {%- for line in allowed_queries -%}
    #         {%- if 'CREATE INDEX' in line or 'Create index' in line -%}
    #           {%- set updated_line = line | regex_replace('(?i)(CREATE INDEX|Create index)\\s+(`[^`]+`)\\s+ON\\s+(`[^`]+`.`[^`]+`.`[^`]+`)\\s*\\(([^)]+)\\)\\s*(WHERE\\s+[^ ]+\\s+IS\\s+NOT\\s+NULL)?\\s*USING\\s+GSI\\s*;', 'CREATE INDEX \\2 ON \\3(\\4) \\5 USING GSI WITH {"defer_build":true, "num_replica":1};') -%}
    #         {%- else -%}
    #           {%- set updated_line = line | regex_replace('(?i)({\"defer_build\":\\s*(false|true)})', '{\"defer_build\": true, \"num_replica\": 1}') -%}
    #         {%- endif -%}
    #         {{ updated.append(updated_line) }}
    #       {%- endfor -%}
    #       {{ updated | join('\n') }}  

      # set_fact:
      #   updated_queries: >
      #     {%- set updated = [] -%}
      #     {%- for line in allowed_queries -%}
      #       {%- if 'CREATE INDEX' in line -%}
      #         {%- if 'WHERE' in line and '"defer_build"' not in line and '"num_replica"' not in line -%}
      #           {%- set updated_line = line | regex_replace('(?i)(USING GSI)', 'USING GSI WITH {"defer_build":true, "num_replica":1}') -%}
      #         {%- else -%}
      #           {%- set updated_line = line -%}
      #         {%- endif -%}
      #       {%- else -%}
      #         {%- set updated_line = line -%}
      #       {%- endif -%}
      #       {{ updated.append(updated_line) }}
      #     {%- endfor -%}
      #     {{ updated | join('\n') }}

          
    
    - name: Ensure defer_build and num_replica options in index queries
      set_fact:
        updated_queries: >-
          {{
            allowed_queries | map('regex_replace', 
              '(?<=\{)(?!.*"defer_build"\s*:\s*true)(?=.*"num_replica"\s*:\s*1)', 
              '"defer_build":true,') 
            | map('regex_replace', 
              '(?<=\{)(?!.*"num_replica"\s*:\s*1)(?=.*"defer_build"\s*:\s*true)', 
              '"num_replica":1,') 
            | map('regex_replace', 
              '(?<=\{)(?!.*"defer_build"\s*:\s*true)(?!.*"num_replica"\s*:\s*1)', 
              '"defer_build":true, "num_replica":1,')
            | list
          }} 

    - name: Ensure defer_build and num_replica options in index queries
      set_fact:
        updated_queries: >-
          {{
            allowed_queries | map('regex_replace',
              '^(CREATE INDEX .*? ON `[^`]+`\.`[^`]+`\.`[^`]+`\([^)]+\)(?: WHERE .+?)? USING GSI);?$',
              '\\1 WITH {"defer_build": true, "num_replica": 1};')
            | list
          }}  

          
    


    # - name: Debug - Updated Index Queries
    #   debug:
    #     msg: "Updated Query: {{ item }}"
    #   with_items: "{{ updated_queries }}"   

    - name: Execute allowed index queries
      shell: "{{ couchbase_bin_path }} -u {{ couchbase_admin_username }} -p {{ couchbase_admin_password }} -s '{{ item }}'"
      with_items: "{{ updated_queries }}"
      when: updated_queries | length > 0
      register: query_result
      ignore_errors: yes 

    # - name: Execute allowed index queries
    #   shell: "{{ couchbase_bin_path }} -u {{ couchbase_admin_username }} -p {{ couchbase_admin_password }} -s '{{ item }}'"
    #   with_items: "{{ allowed_indexes }}"
    #   when: updated_queries | length > 0
    #   register: query_result
    #   ignore_errors: yes  

    # - name: Execute allowed index queries
    #   shell: "{{ couchbase_bin_path }} -u {{ couchbase_admin_username }} -p {{ couchbase_admin_password }} -s '{{ item }}'"
    #   with_items: "{{ updated_queries }}"
    #   when: allowed_queries | length > 0
    #   register: query_result

    - name: Execute deffered_index.sh script
      command: "{{ deffered_index_path }}"
      args:
        chdir: "{{ deffered_index_path | dirname }}"
      register: script_output
      # Executes the deffered_index.sh script after index creation  

  
